{"version":3,"sources":["logo1.svg","serviceWorker.js","components/Article.js","components/Header.js","components/DesktopNav.js","components/MobileNav.js","components/ResponsiveContainer.js","helpers/Fetch.js","helpers/getSrc.js","helpers/parseHTML.js","components/Card.js","components/App.js","routes.js","components/Container.js","index.js","473a486.svg"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","def","HomepageHeading","_ref","mobile","data","react_default","a","createElement","Container","text","Header","as","content","card_title","inverted","className","slug","react_router_dom","to","Button","basic","color","size","Icon","name","getWidth","Responsive","onlyTablet","minWidth","innerWidth","DesktopContainer","state","hideFixedMenu","_this","setState","fixed","showFixedMenu","_this$props","this","props","children","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","style","backgroundImage","concat","thumbnail_url","backgroundSize","vertical","Menu","pointing","secondary","borderless","Item","Image","src","logo","components_Header","Component","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","visible","active","Pusher","dimmed","onClick","position","marginLeft","ResponsiveContainer","DesktopNav","res","MobileNav","Fetch","Object","asyncToGenerator","regenerator_default","mark","_callee","url","fetchUrl","result","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","arguments","getSrc","embed","exec","parseHTML","value","htmlString","pretty","doc","DOMParser","parseFromString","isParseError","console","log","firstChild","innerHTML","textContent","parsedDocument","parsererrorNS","getElementsByTagName","namespaceURI","length","getElementsByTagNameNS","Article","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDataFromDb","then","articleArray","e","undefined","find","parseInt","id","rating","putDataToDB","message","newid","ratingobj","updateDataToDB","axios","post","idToUpdate","updateToApply","objIdToUpdate","forEach","dat","_id","update","deleteFromDB","idTodelete","objIdToDelete","delete","handleRate","bind","assertThisInitialized","_this2","maxRating","_this3","components_ResponsiveContainer","Helmet","title","seo_meta","meta","metadesc","Grid","columns","doubling","stackable","Row","Column","width","fontSize","floated","Embed","placeholder","blocks","posts","autoplay","gallery","bordered","rounded","Rating","onRate","icon","clearable","celled","map","it","type","item","ob","avatar","container","Divider","padding","divided","List","link","React","Cards","Card","Group","fluid","raised","items","thumbnail","wrapped","ui","Content","Meta","date","Description","excerpt","extra","taxonomies","destinations","HomepageLayout","i","pathname","uri","components_Card","defaultRoutes","path","component","exact","Contain","renderRoutes","routes","ReactDOM","render","components_Container","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.320d1ae1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.35cedd4f.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ResponsiveContainer from './ResponsiveContainer'\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Image,\n    List,\n    Segment,\n    Embed,\n    Rating,\n\n} from 'semantic-ui-react'\nimport Fetch from '../helpers/Fetch'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { find } from 'lodash';\nimport logo from '../473a486.svg'\nimport { Helmet } from \"react-helmet\";\nimport getSrc from '../helpers/getSrc';\nimport { parseHTML, isParseError } from '../helpers/parseHTML'\n\nlet def;\nclass Article extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            rating: '',\n            articleArray: []\n        }\n        this.handleRate = this.handleRate.bind(this);\n        this.putDataToDB = this.putDataToDB.bind(this);\n        this.deleteFromDB = this.deleteFromDB.bind(this);\n        this.updateDataToDB = this.updateDataToDB.bind(this);\n    }\n\n    componentDidMount() {\n        const parsedJson = Fetch(this.props.location.state.url)\n        parsedJson.then(value => {\n            this.setState({\n                data: value\n            })\n        })\n        this.getDataFromDb();\n    }\n\n    getDataFromDb = () => {\n        fetch('http://localhost:3001/api/getData')\n            .then((data) => data.json())\n            .then((res) => {\n                this.setState({ articleArray: res.data })\n            }).then(e => {\n                if (this.state.articleArray.length > 0 && undefined !== find(this.state.articleArray, ['id', parseInt(this.props.location.state.id)])) {\n                    def = find(this.state.articleArray, ['id', parseInt(this.props.location.state.id)]).rating;\n                    this.setState({\n                        rating: def\n                    })\n                }\n            });\n    };\n\n    handleRate(e, { rating, maxRating }) {\n        this.setState({ rating, maxRating })\n        this.putDataToDB(rating)\n    }\n\n    putDataToDB = (message) => {\n        if (this.state.articleArray.length > 0) {\n            let newid = this.props.location.state.id;\n            let ratingobj = find(this.state.articleArray, ['id', parseInt(newid)])\n            if (ratingobj !== undefined) {\n                this.updateDataToDB(ratingobj.id, message)\n            }\n            else {\n                axios.post('http://localhost:3001/api/putData', {\n                    id: this.props.location.state.id,\n                    rating: message,\n                })\n            }\n\n        }\n        else\n            axios.post('http://localhost:3001/api/putData', {\n                id: this.props.location.state.id,\n                rating: message,\n            }).then(e => this.setState({\n                rating: message\n            }));\n    };\n\n    updateDataToDB = (idToUpdate, updateToApply) => {\n        let objIdToUpdate = null;\n        parseInt(idToUpdate);\n        this.state.articleArray.forEach((dat) => {\n            if (dat.id == idToUpdate) {\n                objIdToUpdate = dat._id;\n            }\n        });\n        axios.post('http://localhost:3001/api/updateData', {\n            id: objIdToUpdate,\n            update: { rating: updateToApply },\n        });\n    };\n\n    deleteFromDB = (idTodelete) => {\n        parseInt(idTodelete);\n        let objIdToDelete = null;\n        this.state.articleArray.forEach((dat) => {\n            if (dat.id == idTodelete) {\n                objIdToDelete = dat._id;\n            }\n        });\n\n        axios.delete('http://localhost:3001/api/deleteData', {\n            data: {\n                id: objIdToDelete,\n            },\n        });\n        this.setState({\n            rating: null\n        })\n    };\n\n    render() {\n        return (\n            <ResponsiveContainer res={this.state.data}>\n                <Helmet title={this.state.data.length > 0 && this.state.data.seo_meta.title} meta={{ name: 'description', content: `${this.state.data.length > 0 && this.state.data.seo_meta.metadesc}` }} />\n                <Segment className='ui-segment' vertical>\n                    <Grid columns={2} doubling stackable>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <Header as='h3' style={{ fontSize: '2em' }}>\n                                    {this.state.data.title}\n                                </Header>\n                                {this.state.data.content ? (\n                                    <p className='excerpt-title'>\n                                        {parseHTML(this.state.data.content[1].text)}\n                                    </p>\n                                )\n                                    : null}\n                                {this.state.data.content ? (\n                                    <p className='para-layout'>\n                                        {parseHTML(this.state.data.content[0].text)}\n                                    </p>\n                                )\n                                    : null}\n\n                            </Grid.Column>\n                            <Grid.Column floated='right' width={6}>\n                                {this.state.data.content && this.state.data.content[2].content && (\n                                    <div>\n                                        <Embed placeholder={this.state.data.content[3].blocks[1].posts[2].thumbnail_url} className='embed-video' url={getSrc(this.state.data.content[2].content)} autoplay={true}></Embed>\n                                    </div>\n                                )}\n                                {this.state.data.content && this.state.data.content[2].gallery && (\n                                    <div>\n                                        <Image bordered rounded size='huge' src={this.state.data.content[2].gallery[0].url} />\n                                    </div>\n                                )}\n                                <Header as='h2'>Rate Us:</Header>\n                                <Rating maxRating={5} onRate={this.handleRate} icon='star' size='huge' clearable={true} rating={this.state.rating} />\n                                <Button basic color='grey' onClick={() => this.deleteFromDB(this.props.location.state.id)}>Clear</Button>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n                <Segment className='footer-segment' vertical>\n                    <Grid celled='internally' columns='equal' stackable>\n                        <Grid.Row textAlign='center'>\n                            {this.state.data.content && this.state.data.content.map(it => {\n                                if (it.type === 'text_module')\n                                    return it.blocks && it.blocks.map(item => {\n                                        if (item.type === 'related_articles')\n                                            return item.posts.map(ob => (\n                                                <Grid.Column className='grid-column'>\n                                                    <Header as='h3' className='ui-header'>\n                                                        {ob.card_title ? ob.card_title : ob.title}\n                                                    </Header>\n                                                    <p className='para-layout'>\n                                                        <Image avatar src={ob.thumbnail_url} />\n                                                        {ob.title}\n                                                    </p>\n                                                </Grid.Column>\n                                            ))\n                                    })\n                            })}\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n\n\n                <Header\n                    as='h1'\n                    content='Gallery'\n                    textAlign='center'\n                    className='ui-header'\n                />\n                <Grid container columns={2} doubling stackable>\n                    {this.state.data.content && this.state.data.content.map(it => {\n                        if (it.type === 'hotel_module')\n                            return it.gallery.map(item => (\n                                <Grid.Column>\n                                    <Image src={item.url} size='large'></Image>\n                                    <Header as='h6' className='ui-header' >\n                                        {item.title}\n                                    </Header>\n                                    <Divider />\n                                </Grid.Column>\n                            ))\n                    })}\n                </Grid>\n                <Segment inverted vertical style={{ padding: '5em 0em' }}>\n                    <Container>\n                        <Grid divided inverted stackable>\n                            <Grid.Row>\n                                <Grid.Column width={3}>\n                                    <Header inverted as='h4' content='About' />\n                                    <List link inverted>\n                                        <List.Item as='a'>Sitemap</List.Item>\n                                        <List.Item as='a'>Contact Us</List.Item>\n                                        <List.Item as='a'>Religious Ceremonies</List.Item>\n                                        <List.Item as='a'>Gazebo Plans</List.Item>\n                                    </List>\n                                </Grid.Column>\n                                <Grid.Column width={3}>\n                                    <Header inverted as='h4' content='Services' />\n                                    <List link inverted>\n                                        <List.Item as='a'>Pre-Book Hotel</List.Item>\n                                        <List.Item as='a'>DNA FAQ</List.Item>\n                                        <List.Item as='a'>How To Access</List.Item>\n                                        <List.Item as='a'>Search</List.Item>\n                                    </List>\n                                </Grid.Column>\n                                <Grid.Column width={7}>\n                                    <Link to='/'>\n                                        <Image src={logo} size='tiny' className='triv-logo-footer'></Image>\n                                    </Link>\n                                    <p>\n                                        Chilling out on the bed in your hotel room watching television, while wearing your own pajamas, is sometimes the best part of a vacation.\n              </p>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Container>\n                </Segment>\n            </ResponsiveContainer >\n\n        )\n    }\n}\n\nexport default Article","import PropTypes from 'prop-types'\nimport React from 'react'\nimport {\n    Button,\n    Container,\n    Header,\n    Icon,\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nconst HomepageHeading = ({ mobile, data }) => (\n    <Container text>\n        <Header\n            as='h6'\n            content={data ? data.card_title : 'Imagine-a-Hotel.'}\n            inverted\n            className={mobile ? 'mobile-heading-home-h1' : 'desktop-heading-home-h1'}\n        />\n        <Header\n            as='h2'\n            content={data ? data.slug : 'Go wherever you want when you want to.'}\n            inverted\n            className={mobile ? 'mobile-heading-home-h2' : 'desktop-heading-home-h2'}\n        />\n        <Link to='/'>\n            <Button basic color='black' size='large'>\n                Get Started\n        <Icon name='right arrow' />\n            </Button>\n        </Link>\n    </Container >\n)\n\nHomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n}\n\nexport default HomepageHeading","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n    Button,\n    Container,\n    Menu,\n    Responsive,\n    Segment,\n    Visibility,\n    Image,\n} from 'semantic-ui-react'\nimport HomepageHeading from './Header'\nimport logo from '../logo1.svg'\nimport { Link } from 'react-router-dom';\n\nconst getWidth = () => {\n    const isSSR = typeof window === 'undefined'\n\n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n    state = {}\n\n    hideFixedMenu = () => this.setState({ fixed: false })\n    showFixedMenu = () => this.setState({ fixed: true })\n\n    render() {\n        const { data, children } = this.props\n        const { fixed } = this.state\n        return (\n            <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n                <Visibility\n                    once={false}\n                    onBottomPassed={this.showFixedMenu}\n                    onBottomPassedReverse={this.hideFixedMenu}\n                >\n                    <Segment\n                        inverted\n                        textAlign='center'\n                        className={!data && 'desktop-menu-segment'}\n                        style={data && {\n                            backgroundImage: `url(${data.thumbnail_url})`,\n                            backgroundSize: 'cover'\n                        }}\n                        vertical\n                    >\n                        <Menu\n                            fixed={fixed ? 'top' : null}\n                            inverted={!fixed}\n                            pointing={!fixed}\n                            secondary={!fixed}\n                            size='large'\n                            borderless\n                        >\n                            <Container>\n                                <Link to='/'>\n                                    <Menu.Item as='a' className='logo-nav'>\n                                        <Image src={logo} size='medium' className='triv-logo'></Image>\n                                    </Menu.Item>\n                                </Link>\n                            </Container>\n                        </Menu>\n                        <HomepageHeading data={data} />\n                    </Segment>\n                </Visibility>\n\n                {children}\n            </Responsive>\n        )\n    }\n}\n\nDesktopContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nexport default DesktopContainer\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n    Button,\n    Container,\n    Menu,\n    Sidebar,\n    Responsive,\n    Segment,\n    Icon\n} from 'semantic-ui-react'\nimport HomepageHeading from './Header'\n\nconst getWidth = () => {\n    const isSSR = typeof window === 'undefined'\n\n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n    state = {}\n\n    handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n    handleToggle = () => this.setState({ sidebarOpened: true })\n\n    render() {\n        const { children } = this.props\n        const { sidebarOpened } = this.state\n\n        return (\n            <Responsive\n                as={Sidebar.Pushable}\n                getWidth={getWidth}\n                maxWidth={Responsive.onlyMobile.maxWidth}\n            >\n                <Sidebar\n                    as={Menu}\n                    animation='push'\n                    inverted\n                    onHide={this.handleSidebarHide}\n                    vertical\n                    visible={sidebarOpened}\n                >\n                    <Menu.Item as='a' active>\n                        Home\n            </Menu.Item>\n                    <Menu.Item as='a'>Work</Menu.Item>\n                    <Menu.Item as='a'>Company</Menu.Item>\n                    <Menu.Item as='a'>Careers</Menu.Item>\n                    <Menu.Item as='a'>Log in</Menu.Item>\n                    <Menu.Item as='a'>Sign Up</Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher dimmed={sidebarOpened}>\n                    <Segment\n                        inverted\n                        textAlign='center'\n                        className='mobile-menu-segment'\n                        vertical\n                    >\n                        <Container>\n                            <Menu inverted pointing secondary size='large'>\n                                <Menu.Item onClick={this.handleToggle}>\n                                    <Icon name='sidebar' />\n                                </Menu.Item>\n                                <Menu.Item position='right'>\n                                    <Button as='a' inverted>\n                                        Log in\n                    </Button>\n                                    <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                                        Sign Up\n                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        </Container>\n                        <HomepageHeading mobile />\n                    </Segment>\n\n                    {children}\n                </Sidebar.Pusher>\n            </Responsive>\n        )\n    }\n}\n\nMobileContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nexport default MobileContainer","import PropTypes from 'prop-types'\nimport React from 'react'\nimport DesktopContainer from './DesktopNav'\nimport MobileContainer from './MobileNav'\n\nconst ResponsiveContainer = (props) => (\n    <div>\n        <DesktopContainer data={props ? props.res : null}>{props.children}</DesktopContainer>\n        <MobileContainer>{props.children}</MobileContainer>\n    </div>\n)\n\nResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n}\nexport default ResponsiveContainer","const Fetch = async (url) => {\n    const fetchUrl = 'https://cors-anywhere.herokuapp.com/' + url;\n\n    let result = await fetch(fetchUrl);\n    let response = await result.json();\n    return response;\n}\n\nexport default Fetch;","const getSrc = (embed) => {\n    var str = embed;\n    var regex = /<iframe.*?src=\"(.*?)\"/g;\n    var src = regex.exec(str)[1];\n    return src;\n}\n\nexport default getSrc","import pretty from 'pretty';\n\nconst parseHTML = (value) => {\n    let p;\n    let htmlString = pretty(value);\n    let doc = new DOMParser().parseFromString(htmlString, \"text/html\");\n    if (isParseError(doc)) {\n        console.log('parsing error')\n        p = doc.firstChild.children[1]\n        return p.innerHTML;\n    }\n    p = doc.firstChild;\n    return p.textContent;\n}\n\nconst isParseError = (parsedDocument) => {\n    // parser and parsererrorNS could be cached on startup for efficiency.\n    var parser = new DOMParser(),\n        errorneousParse = parser.parseFromString('<', 'text/xml'),\n        parsererrorNS = errorneousParse.getElementsByTagName(\"parsererror\")[0].namespaceURI;\n\n    if (parsererrorNS === 'http://www.w3.org/1999/xhtml') {\n        return parsedDocument.getElementsByTagName(\"parsererror\").length > 0;\n    }\n\n    return parsedDocument.getElementsByTagNameNS(parsererrorNS, 'parsererror').length > 0;\n};\n\nexport { parseHTML, isParseError };","import React from 'react';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nconst Cards = (props) => (\n    <Card.Group>\n        <Card fluid raised className='ui-card'>\n            <Image src={props.items.thumbnail.url} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{props.items.card_title}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>{props.items.date}</span>\n                </Card.Meta>\n                <Card.Description>\n                    {props.items.excerpt}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <a>\n                    <Icon name='map marker' />\n                    {props.items.taxonomies.destinations[0].name}\n                </a>\n            </Card.Content>\n        </Card>\n    </Card.Group>\n\n)\n\nexport default Cards;","import React from 'react'\nimport ResponsiveContainer from './ResponsiveContainer'\nimport {\n  Container,\n  Grid,\n  Header,\n  Image,\n  List,\n  Segment,\n} from 'semantic-ui-react'\nimport Fetch from '../helpers/Fetch'\nimport { Link } from 'react-router-dom';\nimport logo from '../473a486.svg'\nimport { Helmet } from \"react-helmet\";\nimport Cards from './Card'\n\nclass HomepageLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const parsedJson = Fetch('http://trivago-magazine-work-sample-server.s3-website.eu-central-1.amazonaws.com/latest_posts.json')\n    parsedJson.then(value => {\n      this.setState({\n        data: value\n      })\n    })\n  }\n\n  render() {\n    return (\n      <ResponsiveContainer>\n        <Helmet title={'Citour'} />\n        <Segment className='ui-segment' vertical>\n          <Grid columns={3} doubling stackable>\n            {this.state.data.map((item, i) => (\n              <Grid.Column>\n                <Link to={{ pathname: `/article/${item.slug}`, state: { url: `${item.uri}`, id: `${item.id}` } }}>\n                  <Cards items={item} />\n                </Link>\n              </Grid.Column>\n            ))}\n          </Grid>\n        </Segment>\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={3}>\n                  <Header inverted as='h4' content='About' />\n                  <List link inverted>\n                    <List.Item as='a'>Sitemap</List.Item>\n                    <List.Item as='a'>Contact Us</List.Item>\n                    <List.Item as='a'>Religious Ceremonies</List.Item>\n                    <List.Item as='a'>Gazebo Plans</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={3}>\n                  <Header inverted as='h4' content='Services' />\n                  <List link inverted>\n                    <List.Item as='a'>Pre-Book Hotel</List.Item>\n                    <List.Item as='a'>DNA FAQ</List.Item>\n                    <List.Item as='a'>How To Access</List.Item>\n                    <List.Item as='a'>Search</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={7}>\n                  <Link to='/'>\n                    <Image src={logo} size='tiny' className='triv-logo-footer'></Image>\n                  </Link>\n                  <p>\n                    Chilling out on the bed in your hotel room watching television, while wearing your own pajamas, is sometimes the best part of a vacation.\n              </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </ResponsiveContainer>\n    )\n  }\n}\n\nexport default HomepageLayout","import Article from './components/Article.js';\nimport App from './components/App'\n\nexport const defaultRoutes = [\n    {\n        path: '/',\n        component: App,\n        exact: true,\n    },\n    {\n        path: '/article/:id',\n        component: Article,\n    },\n];\n/* for nested routes */\nconst routes = [\n    {\n        path: '/',\n        component: App,\n        routes: defaultRoutes,\n    },\n];\n\nexport default defaultRoutes;","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config'\nimport routes from '../routes';\n\nconst Contain = () => (\n    <Router>\n        <div>\n            {renderRoutes(routes)}\n        </div>\n    </Router>\n)\nexport default Contain","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorker from './serviceWorker';\nimport Contain from './components/Container'\n\nReactDOM.render(\n    <Contain />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/473a486.473a4869.svg\";"],"sourceRoot":""}